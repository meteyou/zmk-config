#undef ZMK_LEADER_SEQUENCE
#define ZMK_LEADER_SEQUENCE(name, leader_bindings, leader_sequence) \
    / { \
        behaviors { \
            leader: leader { \
                compatible = "zmk,behavior-leader-key"; \
                #binding-cells = <0>; \
                ignore-keys = <LSHFT RSHFT>; \
                leader_sequence_ ## name { \
                    bindings = <leader_bindings>; \
                    sequence = <leader_sequence>; \
                }; \
            }; \
        }; \
    };

/*                KEY POSITIONS

  ╭─────────────────────────╮ ╭─────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯

Note: The leader sequence must be pressed exactly as defined to be triggered.
To capitalize a letter, hold the shift key (or tap sticky-shift) *before*
tapping the leader key. */

ZMK_UNICODE_SINGLE(degree, N0, N0, B, N0)

/* German umlauts */
ZMK_LEADER_SEQUENCE(de_ae,      &de_ae,         A)  // ä
ZMK_LEADER_SEQUENCE(de_oe,      &de_oe,         O)  // ö
ZMK_LEADER_SEQUENCE(de_ue,      &de_ue,         U)  // ü
ZMK_LEADER_SEQUENCE(de_eszett,  &de_eszett,     S)  // ß
ZMK_LEADER_SEQUENCE(curr_euro,  &curr_euro,     J)  // €
ZMK_LEADER_SEQUENCE(degree,     &degree,        Q)  // °